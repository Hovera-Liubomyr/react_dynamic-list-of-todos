{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","onClickTodo","clickTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","onFilterSelect","filterValue","onQueryChange","queryValue","onQueryDelete","value","onChange","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","TodoModal","onCloseModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","All","filter","setFilter","query","setQuery","onTodo","setOnTodo","preparedTodos","useMemo","Completed","Active","toLowerCase","includes","trim","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40613b09.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  clickTodo?: Todo | null;\n  onClickTodo?: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onClickTodo = () => { },\n  clickTodo = null,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': clickTodo?.id === id,\n              })}\n            >\n              <td className=\"is-vcentered\">\n                {id}\n              </td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onClickTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far', {\n                        'fa-eye': clickTodo?.id !== id,\n                        'fa-eye-slash': clickTodo?.id === id,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  onFilterSelect: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  onQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterValue: string,\n  queryValue: string,\n  onQueryDelete: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilterSelect,\n  filterValue,\n  onQueryChange,\n  queryValue,\n  onQueryDelete,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterValue}\n          onChange={onFilterSelect}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={queryValue}\n        onChange={onQueryChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {queryValue && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onQueryDelete}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum FilterStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState(FilterStatus.All);\n  const [query, setQuery] = useState('');\n  const [onTodo, setOnTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filterSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as FilterStatus);\n  };\n\n  const queryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const queryDelete = () => {\n    setQuery('');\n  };\n\n  const preparedTodos = useMemo(() => {\n    const filteredBy = (() => {\n      switch (filter) {\n        case FilterStatus.Completed:\n          return todos.filter(todo => todo.completed);\n\n        case FilterStatus.Active:\n          return todos.filter(todo => !todo.completed);\n\n        default:\n          return todos;\n      }\n    })();\n\n    return filteredBy.filter(todo => todo.title.toLowerCase().includes(query.trim().toLowerCase())) || [];\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterSelect={filterSelect}\n                filterValue={filter}\n                onQueryChange={queryChange}\n                queryValue={query}\n                onQueryDelete={queryDelete}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={preparedTodos}\n                  onClickTodo={setOnTodo}\n                  clickTodo={onTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {onTodo && (\n        <TodoModal\n          todo={onTodo}\n          onCloseModal={() => setOnTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  onCloseModal?: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onCloseModal = () => { },\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}